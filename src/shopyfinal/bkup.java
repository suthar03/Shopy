/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shopyfinal;

import java.awt.Font;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Suthar
 */
public class bkup extends javax.swing.JFrame {

    /**
     * Creates new form msg
     */
    String baseadd,user,logo;
    String lang="English";
    String lb1="Drive Updated Successfully!!";
    String bkadd;    
    public bkup(String base,String golo) throws IOException {
        baseadd=base;
        logo=golo;
        try {
            this.setIconImage(ImageIO.read(new File(logo)));
        } catch (IOException ex) {
            JLabel label = new JLabel("Logo Problem");
            label.setFont(new Font("Arial", Font.BOLD, 18));
            JOptionPane.showMessageDialog(null,label,"ERROR",JOptionPane.WARNING_MESSAGE);
        }
        try {
            user = GetLine.mainn(baseadd+"/Cuser.txt", 2);
        } catch (IOException ex) {
             JLabel label = new JLabel("Current user !!! Error0003");
            label.setFont(new Font("Arial", Font.BOLD, 18));
            JOptionPane.showMessageDialog(null,label,"ERROR",JOptionPane.WARNING_MESSAGE);
      }
        initComponents();
        this.setLocationRelativeTo(null);
        try {
        lang = GetLine.mainn(baseadd+"/"+user+"/conf.txt", 1);
        System.out.println(lang);
        } catch (IOException ex) {
        JLabel label = new JLabel("Configuration Error !!! Error0003");
        label.setFont(new Font("Arial", Font.BOLD, 18));
        JOptionPane.showMessageDialog(null,label,"ERROR",JOptionPane.WARNING_MESSAGE);
        }
        System.out.println(GetLine.mainn(baseadd+"/"+user+"/conf.txt", 2));
        
        if(lang.compareToIgnoreCase("English")!=0){
            hdlbl.setText(": बैकअप Location :");
            save.setText("सेव करे");
            close.setText("बंद करे");
            lb1="बैकअप सेटिंग सफलतापूर्वक अपडेट किया गया !! ";
            
        }
        bkadd = GetLine.mainn(baseadd+"/"+user+"/conf.txt", 3);
        File fg=new File(bkadd);
        Autobkup.setState(Boolean.valueOf(GetLine.mainn(baseadd+"/"+user+"/conf.txt", 4)));
        //flc.changeToParentDirectory();
        flc.setSelectedFile(fg);
        
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnl = new javax.swing.JPanel();
        hdlbl = new javax.swing.JLabel();
        close = new javax.swing.JButton();
        save = new javax.swing.JButton();
        Autobkup = new java.awt.Checkbox();
        flc = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Greeting Message");
        setAlwaysOnTop(true);

        hdlbl.setFont(new java.awt.Font("Monospaced", 1, 16)); // NOI18N
        hdlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        hdlbl.setText(": Backup Address :");

        close.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        close.setText("Close");
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });

        save.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        Autobkup.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        Autobkup.setLabel(": Auto Backup");

        flc.setCurrentDirectory(new java.io.File("E:\\"));
            flc.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
            flc.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    flcActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout pnlLayout = new javax.swing.GroupLayout(pnl);
            pnl.setLayout(pnlLayout);
            pnlLayout.setHorizontalGroup(
                pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(hdlbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlLayout.createSequentialGroup()
                    .addGap(35, 35, 35)
                    .addComponent(flc, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlLayout.createSequentialGroup()
                            .addGap(68, 68, 68)
                            .addComponent(Autobkup, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pnlLayout.createSequentialGroup()
                            .addGap(110, 110, 110)
                            .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(close, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );
            pnlLayout.setVerticalGroup(
                pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(hdlbl)
                    .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlLayout.createSequentialGroup()
                            .addGap(49, 49, 49)
                            .addComponent(Autobkup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(77, 77, 77)
                            .addComponent(save)
                            .addGap(67, 67, 67)
                            .addComponent(close))
                        .addGroup(pnlLayout.createSequentialGroup()
                            .addGap(33, 33, 33)
                            .addComponent(flc, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(91, Short.MAX_VALUE))
            );

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
      bkadd=flc.getSelectedFile().getAbsolutePath();
        try {
            //Replace Line 2
            ReplaceLineWN.mainn(baseadd+"/"+user, "conf.txt",3,bkadd);
            ReplaceLineWN.mainn(baseadd+"/"+user, "conf.txt",4,String.valueOf(Autobkup.getState()));
            
            this.dispose();
        } catch (IOException ex) {
            JLabel label = new JLabel("Not Saved"+ex);
            label.setFont(new Font("Arial", Font.BOLD, 18));
            JOptionPane.showMessageDialog(null,label,"ERROR",JOptionPane.WARNING_MESSAGE);
            
        }
    }//GEN-LAST:event_saveActionPerformed

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        this.dispose();
    }//GEN-LAST:event_closeActionPerformed

    private void flcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flcActionPerformed
        if (evt.getActionCommand().equals(JFileChooser.APPROVE_SELECTION)) {
               System.out.println("File selected: " + flc.getSelectedFile());
               bkadd=flc.getSelectedFile().getAbsolutePath();
               save.requestFocus();
               
            }
        if (evt.getActionCommand().equals(JFileChooser.CANCEL_SELECTION)) {
            this.setAlwaysOnTop(false);
            
               JLabel label = new JLabel("You Must Choose a Direcotry for backup Storage");
            label.setFont(new Font("Arial", Font.BOLD, 18));
            JOptionPane.showMessageDialog(null,label,"ERROR",JOptionPane.WARNING_MESSAGE);
            System.out.println("After");
            this.setAlwaysOnTop(true);
               
            }
    }//GEN-LAST:event_flcActionPerformed
 /*JPanel pnl2;
    public void createPanel3() {
        
        System.out.println("Its Here");
      pnl2 = new JPanel();
      pnl2.setLayout(new BorderLayout());
      pnl2.setPreferredSize(new Dimension(400, 100));
      pnl2.setMinimumSize(new Dimension(100, 50));
        this.add(pnl2).setVisible(true);
        pnl2.setVisible(true);
      final JFileChooser fileChooser = new JFileChooser();
      fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
      fileChooser.setDialogTitle("Browse naar de  locatie waar je de gesorteerde bestanden wil zetten en klik op \"OPEN\"");
      pnl2.add(fileChooser, BorderLayout.NORTH);
      fileChooser.addActionListener(new ActionListener() {
         public void actionPerformed(ActionEvent e) {
            if (e.getActionCommand().equals(JFileChooser.APPROVE_SELECTION)) {
               System.out.println("File selected: " + fileChooser.getSelectedFile());
            }
         }
      });
   }*/
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(bkup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(bkup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(bkup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(bkup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new bkup("D:/Shopy/Shopy", "src/Icons/logo.png").setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(bkup.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Checkbox Autobkup;
    private javax.swing.JButton close;
    private javax.swing.JFileChooser flc;
    private javax.swing.JLabel hdlbl;
    private javax.swing.JPanel pnl;
    private javax.swing.JButton save;
    // End of variables declaration//GEN-END:variables
}
